syntax = "proto3";
package tron_messages;

// Tx message
message TransactionHeader {
  string Id = 1;
  int64 Fee = 2;
  int64 Index = 3;
};

message ContractArgumentValue {
  string Type = 1;
  oneof Value {
    string String = 2;
    uint64 UInt = 3;
  }
}

message ContractArgument {
  string Name = 1;
  ContractArgumentValue Value = 3;
}

message ContractInfo {
  string Type = 1;
  repeated ContractArgument ContractArguments = 2;
};

// MORE INFORMATION: https://developers.tron.network/docs/tron-protocol-transaction
message TransactionInfo {
  int64 Expiration = 1;
  string Data = 2;
  int64 FeeLimit = 3;
  int64 Timestamp = 4;
  repeated ContractInfo ContractInfos = 5;
};

message TransactionResult {
  string Status = 1;
  string Message = 2;
};

message Receipt {
  string Result = 1;
  int64 EnergyPenaltyTotal = 2;
  int64 EnergyFee = 3;
  int64 EnergyUsageTotal = 4;
  int64 OriginEnergyUsage = 5;
  int64 NetUsage = 6;
  int64 NetFee = 7;
};

message Contract {
  string Address = 1;
  repeated string ExecutionResults = 2;
};

message Staking {
  int64 WithdrawAmount = 1;
  int64 UnfreezeAmount = 2;
  int64 WithdrawExpireAmount = 3;
  map<string, int64> CancelUnfreezeV2Amount = 4;
};

message Log {
  string Address = 1;
  string Data = 2;
  repeated string Topics = 3;
};

message CallValueInfo {
  uint64 CallValue = 1;
  uint64 TokenId = 2;
};

message InternalTransaction {
  string CallerAddress = 1;
  string Note = 2;
  string TransferToAddress = 3;
  repeated CallValueInfo CallValueInfos = 4;
  string Hash = 5;
};

// MORE INFORMATION: https://developers.tron.network/reference/gettransactioninfobyid-1
message Transaction {
  TransactionHeader Header = 1;
  TransactionInfo Info = 2;
  TransactionResult Result = 3;
  Receipt Receipt = 4;
  Contract Contract = 5;
  Staking Staking = 6;
  repeated Log Logs = 7;
  repeated InternalTransaction InternalTransactions = 8;
};

// Block message
message BlockHeader {
  int64 Number = 1;
  string Hash = 2;
  int64 Timestamp = 3;
  string ParentHash = 4;
  string Version = 5;
  string TxTrieRoot = 6;
  string AccountStateRoot = 7;
};

// Information about witness (or validator) who packed this block.
message WitnessInfo {
  string Address = 1;
  int64 Id = 2;
  int64 Signature = 3;
}

// MORE INFORMATION: https://developers.tron.network/reference/getblock-2
message BlockMessage {
  BlockHeader Header = 1;
  WitnessInfo WitnessInfo = 2;
  repeated Transaction Transactions = 3;
};
