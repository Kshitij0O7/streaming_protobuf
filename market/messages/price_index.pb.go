// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: market/price_index.proto

package marketdata_messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Symbol string `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
}

func (x *Currency) Reset() {
	*x = Currency{}
	mi := &file_market_price_index_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_market_price_index_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_market_price_index_proto_rawDescGZIP(), []int{0}
}

func (x *Currency) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Currency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Currency) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type CurrencyPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency              *Currency `protobuf:"bytes,1,opt,name=Currency,proto3" json:"Currency,omitempty"`
	PriceInUsd            float64   `protobuf:"fixed64,2,opt,name=PriceInUsd,proto3" json:"PriceInUsd,omitempty"`
	PriceInUsdSmoothed1K  float64   `protobuf:"fixed64,3,opt,name=PriceInUsdSmoothed1k,proto3" json:"PriceInUsdSmoothed1k,omitempty"`
	PriceInUsdSmoothed10K float64   `protobuf:"fixed64,4,opt,name=PriceInUsdSmoothed10k,proto3" json:"PriceInUsdSmoothed10k,omitempty"`
	Tokens                []*Token  `protobuf:"bytes,5,rep,name=Tokens,proto3" json:"Tokens,omitempty"`
}

func (x *CurrencyPrice) Reset() {
	*x = CurrencyPrice{}
	mi := &file_market_price_index_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrencyPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyPrice) ProtoMessage() {}

func (x *CurrencyPrice) ProtoReflect() protoreflect.Message {
	mi := &file_market_price_index_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyPrice.ProtoReflect.Descriptor instead.
func (*CurrencyPrice) Descriptor() ([]byte, []int) {
	return file_market_price_index_proto_rawDescGZIP(), []int{1}
}

func (x *CurrencyPrice) GetCurrency() *Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CurrencyPrice) GetPriceInUsd() float64 {
	if x != nil {
		return x.PriceInUsd
	}
	return 0
}

func (x *CurrencyPrice) GetPriceInUsdSmoothed1K() float64 {
	if x != nil {
		return x.PriceInUsdSmoothed1K
	}
	return 0
}

func (x *CurrencyPrice) GetPriceInUsdSmoothed10K() float64 {
	if x != nil {
		return x.PriceInUsdSmoothed10K
	}
	return 0
}

func (x *CurrencyPrice) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type PriceIndexMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time           uint64           `protobuf:"varint,1,opt,name=Time,proto3" json:"Time,omitempty"`
	CurrencyPrices []*CurrencyPrice `protobuf:"bytes,2,rep,name=CurrencyPrices,proto3" json:"CurrencyPrices,omitempty"`
}

func (x *PriceIndexMessage) Reset() {
	*x = PriceIndexMessage{}
	mi := &file_market_price_index_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceIndexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceIndexMessage) ProtoMessage() {}

func (x *PriceIndexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_market_price_index_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceIndexMessage.ProtoReflect.Descriptor instead.
func (*PriceIndexMessage) Descriptor() ([]byte, []int) {
	return file_market_price_index_proto_rawDescGZIP(), []int{2}
}

func (x *PriceIndexMessage) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PriceIndexMessage) GetCurrencyPrices() []*CurrencyPrice {
	if x != nil {
		return x.CurrencyPrices
	}
	return nil
}

var File_market_price_index_proto protoreflect.FileDescriptor

var file_market_price_index_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a,
	0x17, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x88, 0x02, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x64, 0x12, 0x32, 0x0a,
	0x14, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x64, 0x53, 0x6d, 0x6f, 0x6f, 0x74,
	0x68, 0x65, 0x64, 0x31, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x64, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x65, 0x64, 0x31,
	0x6b, 0x12, 0x34, 0x0a, 0x15, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x64, 0x53,
	0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x65, 0x64, 0x31, 0x30, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x15, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x64, 0x53, 0x6d, 0x6f, 0x6f,
	0x74, 0x68, 0x65, 0x64, 0x31, 0x30, 0x6b, 0x12, 0x32, 0x0a, 0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x73, 0x0a, 0x11, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_market_price_index_proto_rawDescOnce sync.Once
	file_market_price_index_proto_rawDescData = file_market_price_index_proto_rawDesc
)

func file_market_price_index_proto_rawDescGZIP() []byte {
	file_market_price_index_proto_rawDescOnce.Do(func() {
		file_market_price_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_market_price_index_proto_rawDescData)
	})
	return file_market_price_index_proto_rawDescData
}

var file_market_price_index_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_market_price_index_proto_goTypes = []any{
	(*Currency)(nil),          // 0: marketdata_messages.Currency
	(*CurrencyPrice)(nil),     // 1: marketdata_messages.CurrencyPrice
	(*PriceIndexMessage)(nil), // 2: marketdata_messages.PriceIndexMessage
	(*Token)(nil),             // 3: marketdata_messages.Token
}
var file_market_price_index_proto_depIdxs = []int32{
	0, // 0: marketdata_messages.CurrencyPrice.Currency:type_name -> marketdata_messages.Currency
	3, // 1: marketdata_messages.CurrencyPrice.Tokens:type_name -> marketdata_messages.Token
	1, // 2: marketdata_messages.PriceIndexMessage.CurrencyPrices:type_name -> marketdata_messages.CurrencyPrice
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_market_price_index_proto_init() }
func file_market_price_index_proto_init() {
	if File_market_price_index_proto != nil {
		return
	}
	file_market_marketdata_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_market_price_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_market_price_index_proto_goTypes,
		DependencyIndexes: file_market_price_index_proto_depIdxs,
		MessageInfos:      file_market_price_index_proto_msgTypes,
	}.Build()
	File_market_price_index_proto = out.File
	file_market_price_index_proto_rawDesc = nil
	file_market_price_index_proto_goTypes = nil
	file_market_price_index_proto_depIdxs = nil
}
