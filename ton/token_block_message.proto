syntax = "proto3";
package ton_messages;

import "ton/block_message.proto";
import "ton/event_message.proto";

message TokenInfo {
  bytes SmartContract = 1;
  string Name = 2;
  string Symbol = 3;
  int32 Decimals = 4;
  bool HasURI = 5;
  bool Fungible = 6;
  bool Native = 7;
  // string Image = 8;
  // string Description = 9;
}

// message Opcode {
//   string Name = 1;
//   bytes Hash = 2;
// }

message Transfer {
  bytes Sender = 1;
  bytes Receiver = 2;
  bytes Amount = 3;
  TokenInfo Currency = 4;
  bool Success = 5;
  optional string Comment = 6;
}

message TokenTransfer {
  ton_messages.BlockHeader BlockHeader = 1;
  ton_messages.ParsedTransaction ParsedTransaction = 2;
  optional ParsedMessage InMessage = 3;
  Transfer Transfer = 4;

  // uint64 TransactionIndex = 1;
  // bytes Sender = 2;
  // bytes SenderWallet = 3;
  // bytes Receiver = 4;
  // bytes Amount = 5;
  // TokenInfo Currency = 6;
  //
  // Opcode Opcode = 7;
  // bool Success = 8;
  // uint32 Index = 9;
  //
  // optional string Comment = 10;
}

message TokenBlockMessage {
  ton_messages.Chain Chain = 1;
  repeated TokenTransfer Transfers = 2;
  // ton_messages.BlockHeader Header = 2;
}
