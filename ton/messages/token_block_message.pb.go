// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.1
// source: ton/token_block_message.proto

package ton_messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmartContract     *AccountID `protobuf:"bytes,1,opt,name=SmartContract,proto3" json:"SmartContract,omitempty"`
	Name              string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Symbol            string     `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Decimals          int32      `protobuf:"varint,4,opt,name=Decimals,proto3" json:"Decimals,omitempty"`
	HasURI            bool       `protobuf:"varint,5,opt,name=HasURI,proto3" json:"HasURI,omitempty"`
	URI               string     `protobuf:"bytes,6,opt,name=URI,proto3" json:"URI,omitempty"`
	Fungible          bool       `protobuf:"varint,7,opt,name=Fungible,proto3" json:"Fungible,omitempty"`
	Native            bool       `protobuf:"varint,8,opt,name=Native,proto3" json:"Native,omitempty"`
	ImageURI          string     `protobuf:"bytes,9,opt,name=ImageURI,proto3" json:"ImageURI,omitempty"`
	Description       string     `protobuf:"bytes,10,opt,name=Description,proto3" json:"Description,omitempty"`
	SocialNetworksURI string     `protobuf:"bytes,11,opt,name=SocialNetworksURI,proto3" json:"SocialNetworksURI,omitempty"`
	WebsitesURI       string     `protobuf:"bytes,12,opt,name=WebsitesURI,proto3" json:"WebsitesURI,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	mi := &file_ton_token_block_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ton_token_block_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_ton_token_block_message_proto_rawDescGZIP(), []int{0}
}

func (x *TokenInfo) GetSmartContract() *AccountID {
	if x != nil {
		return x.SmartContract
	}
	return nil
}

func (x *TokenInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TokenInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TokenInfo) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TokenInfo) GetHasURI() bool {
	if x != nil {
		return x.HasURI
	}
	return false
}

func (x *TokenInfo) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *TokenInfo) GetFungible() bool {
	if x != nil {
		return x.Fungible
	}
	return false
}

func (x *TokenInfo) GetNative() bool {
	if x != nil {
		return x.Native
	}
	return false
}

func (x *TokenInfo) GetImageURI() string {
	if x != nil {
		return x.ImageURI
	}
	return ""
}

func (x *TokenInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TokenInfo) GetSocialNetworksURI() string {
	if x != nil {
		return x.SocialNetworksURI
	}
	return ""
}

func (x *TokenInfo) GetWebsitesURI() string {
	if x != nil {
		return x.WebsitesURI
	}
	return ""
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   *AccountID `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver *AccountID `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Amount   []byte     `protobuf:"bytes,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Currency *TokenInfo `protobuf:"bytes,4,opt,name=Currency,proto3" json:"Currency,omitempty"`
	Success  bool       `protobuf:"varint,5,opt,name=Success,proto3" json:"Success,omitempty"`
	Comment  *string    `protobuf:"bytes,6,opt,name=Comment,proto3,oneof" json:"Comment,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	mi := &file_ton_token_block_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_ton_token_block_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_ton_token_block_message_proto_rawDescGZIP(), []int{1}
}

func (x *Transfer) GetSender() *AccountID {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transfer) GetReceiver() *AccountID {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Transfer) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Transfer) GetCurrency() *TokenInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *Transfer) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Transfer) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

type TokenTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeader       *BlockHeader       `protobuf:"bytes,1,opt,name=BlockHeader,proto3" json:"BlockHeader,omitempty"`
	ParsedTransaction *ParsedTransaction `protobuf:"bytes,2,opt,name=ParsedTransaction,proto3" json:"ParsedTransaction,omitempty"`
	InMessage         *ParsedMessage     `protobuf:"bytes,3,opt,name=InMessage,proto3,oneof" json:"InMessage,omitempty"`
	Transfer          *Transfer          `protobuf:"bytes,4,opt,name=Transfer,proto3" json:"Transfer,omitempty"`
}

func (x *TokenTransfer) Reset() {
	*x = TokenTransfer{}
	mi := &file_ton_token_block_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenTransfer) ProtoMessage() {}

func (x *TokenTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_ton_token_block_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenTransfer.ProtoReflect.Descriptor instead.
func (*TokenTransfer) Descriptor() ([]byte, []int) {
	return file_ton_token_block_message_proto_rawDescGZIP(), []int{2}
}

func (x *TokenTransfer) GetBlockHeader() *BlockHeader {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *TokenTransfer) GetParsedTransaction() *ParsedTransaction {
	if x != nil {
		return x.ParsedTransaction
	}
	return nil
}

func (x *TokenTransfer) GetInMessage() *ParsedMessage {
	if x != nil {
		return x.InMessage
	}
	return nil
}

func (x *TokenTransfer) GetTransfer() *Transfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

type TokenBlockMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain     *Chain           `protobuf:"bytes,1,opt,name=Chain,proto3" json:"Chain,omitempty"`
	Transfers []*TokenTransfer `protobuf:"bytes,2,rep,name=Transfers,proto3" json:"Transfers,omitempty"` // ton_messages.BlockHeader Header = 2;
}

func (x *TokenBlockMessage) Reset() {
	*x = TokenBlockMessage{}
	mi := &file_ton_token_block_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenBlockMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBlockMessage) ProtoMessage() {}

func (x *TokenBlockMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ton_token_block_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBlockMessage.ProtoReflect.Descriptor instead.
func (*TokenBlockMessage) Descriptor() ([]byte, []int) {
	return file_ton_token_block_message_proto_rawDescGZIP(), []int{3}
}

func (x *TokenBlockMessage) GetChain() *Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *TokenBlockMessage) GetTransfers() []*TokenTransfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

var File_ton_token_block_message_proto protoreflect.FileDescriptor

var file_ton_token_block_message_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x6f, 0x6e, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x17, 0x74,
	0x6f, 0x6e, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x74, 0x6f, 0x6e, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xfe, 0x02, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a,
	0x0d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x0d, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x61, 0x73, 0x55, 0x52, 0x49, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x48, 0x61, 0x73, 0x55, 0x52, 0x49, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x52, 0x49, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x49, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x49, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x49, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x55, 0x52, 0x49, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x55, 0x52, 0x49, 0x12, 0x20,
	0x0a, 0x0b, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x55, 0x52, 0x49, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x55, 0x52, 0x49,
	0x22, 0x82, 0x02, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2f, 0x0a,
	0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x33,
	0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x9d, 0x02, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x09, 0x49, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x49, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x49, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x11, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ton_token_block_message_proto_rawDescOnce sync.Once
	file_ton_token_block_message_proto_rawDescData = file_ton_token_block_message_proto_rawDesc
)

func file_ton_token_block_message_proto_rawDescGZIP() []byte {
	file_ton_token_block_message_proto_rawDescOnce.Do(func() {
		file_ton_token_block_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_ton_token_block_message_proto_rawDescData)
	})
	return file_ton_token_block_message_proto_rawDescData
}

var file_ton_token_block_message_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ton_token_block_message_proto_goTypes = []any{
	(*TokenInfo)(nil),         // 0: ton_messages.TokenInfo
	(*Transfer)(nil),          // 1: ton_messages.Transfer
	(*TokenTransfer)(nil),     // 2: ton_messages.TokenTransfer
	(*TokenBlockMessage)(nil), // 3: ton_messages.TokenBlockMessage
	(*AccountID)(nil),         // 4: ton_messages.AccountID
	(*BlockHeader)(nil),       // 5: ton_messages.BlockHeader
	(*ParsedTransaction)(nil), // 6: ton_messages.ParsedTransaction
	(*ParsedMessage)(nil),     // 7: ton_messages.ParsedMessage
	(*Chain)(nil),             // 8: ton_messages.Chain
}
var file_ton_token_block_message_proto_depIdxs = []int32{
	4,  // 0: ton_messages.TokenInfo.SmartContract:type_name -> ton_messages.AccountID
	4,  // 1: ton_messages.Transfer.Sender:type_name -> ton_messages.AccountID
	4,  // 2: ton_messages.Transfer.Receiver:type_name -> ton_messages.AccountID
	0,  // 3: ton_messages.Transfer.Currency:type_name -> ton_messages.TokenInfo
	5,  // 4: ton_messages.TokenTransfer.BlockHeader:type_name -> ton_messages.BlockHeader
	6,  // 5: ton_messages.TokenTransfer.ParsedTransaction:type_name -> ton_messages.ParsedTransaction
	7,  // 6: ton_messages.TokenTransfer.InMessage:type_name -> ton_messages.ParsedMessage
	1,  // 7: ton_messages.TokenTransfer.Transfer:type_name -> ton_messages.Transfer
	8,  // 8: ton_messages.TokenBlockMessage.Chain:type_name -> ton_messages.Chain
	2,  // 9: ton_messages.TokenBlockMessage.Transfers:type_name -> ton_messages.TokenTransfer
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ton_token_block_message_proto_init() }
func file_ton_token_block_message_proto_init() {
	if File_ton_token_block_message_proto != nil {
		return
	}
	file_ton_block_message_proto_init()
	file_ton_event_message_proto_init()
	file_ton_token_block_message_proto_msgTypes[1].OneofWrappers = []any{}
	file_ton_token_block_message_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ton_token_block_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ton_token_block_message_proto_goTypes,
		DependencyIndexes: file_ton_token_block_message_proto_depIdxs,
		MessageInfos:      file_ton_token_block_message_proto_msgTypes,
	}.Build()
	File_ton_token_block_message_proto = out.File
	file_ton_token_block_message_proto_rawDesc = nil
	file_ton_token_block_message_proto_goTypes = nil
	file_ton_token_block_message_proto_depIdxs = nil
}
